options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: fir
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_noise_source_x_0
  id: analog_noise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '0.2'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    seed: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 252.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_SQR_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 524.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 528.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 268.0]
    rotation: 0
    state: true
- name: blocks_throttle_0_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [592, 540.0]
    rotation: 0
    state: true
- name: epy_block_2
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n\n    def __init__(self, filter_taps=[0.25,\
      \ 0.25, 0.25, 0.25]):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Custom FIR filter',   # will show up in\
      \ GRC\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n\
      \        )\n        \n        self.filter_taps = filter_taps\n        self.N\
      \ = len(filter_taps)\n        self.set_history(self.N)\n        \n        #Example:\
      \ The comand set_history(N) appends the first N-1 previous items \n        #to\
      \ the input buffer (input_items), while the N'th item is the current value.\
      \ \n        #E.g. if N=4:\n        #input_items[0][3] is the beginning of the\
      \ current input stream.\n        #input_items[0][2] is one input older than\
      \ the current input stream.\n        #input_items[0][1] is one input older than\
      \ input_items[0][2]\n        #input_items[0][0] is one input older than input_items[0][1]\n\
      \n    def work(self, input_items, output_items):\n        \n        #print(\"\
      length of input vector =\" + str(len(input_items[0])))\n        #print(\"length\
      \ of output vector =\"+ str(len(output_items[0])))\n        \n        for i\
      \ in range(0, len(output_items[0])):\n            output_items[0][i] = 0\n \
      \           for j in range(0, self.N):\n                output_items[0][i] =\
      \ output_items[0][i] + input_items[0][i + self.N - 1 - j] * self.filter_taps[j]\n\
      \                 \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filter_taps: '[0.25, 0.25, 0.25, 0.25]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Custom FIR filter', 'blk', [('filter_taps', '[0.25, 0.25, 0.25, 0.25]')],
      [('0', 'float', 1)], [('0', 'float', 1)], 'arguments to this function show up
      as parameters in GRC', ['filter_taps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 348.0]
    rotation: 0
    state: enabled
- name: epy_block_2_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n\n    def __init__(self, filter_taps=[0.25,\
      \ 0.25, 0.25, 0.25]):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Custom FIR filter',   # will show up in\
      \ GRC\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n\
      \        )\n        \n        self.filter_taps = filter_taps\n        self.N\
      \ = len(filter_taps)\n        self.set_history(self.N)\n        \n        #Example:\
      \ The comand set_history(N) appends the first N-1 previous items \n        #to\
      \ the input buffer (input_items), while the N'th item is the current value.\
      \ \n        #E.g. if N=4:\n        #input_items[0][3] is the beginning of the\
      \ current input stream.\n        #input_items[0][2] is one input older than\
      \ the current input stream.\n        #input_items[0][1] is one input older than\
      \ input_items[0][2]\n        #input_items[0][0] is one input older than input_items[0][1]\n\
      \n    def work(self, input_items, output_items):\n        \n        #print(\"\
      length of input vector =\" + str(len(input_items[0])))\n        #print(\"length\
      \ of output vector =\"+ str(len(output_items[0])))\n        \n        for i\
      \ in range(0, len(output_items[0])):\n            output_items[0][i] = 0\n \
      \           for j in range(0, self.N):\n                output_items[0][i] =\
      \ output_items[0][i] + input_items[0][i + self.N - 1 - j] * self.filter_taps[j]\n\
      \                 \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filter_taps: '[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Custom FIR filter', 'blk', [('filter_taps', '[0.25, 0.25, 0.25, 0.25]')],
      [('0', 'float', 1)], [('0', 'float', 1)], 'arguments to this function show up
      as parameters in GRC', ['filter_taps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 564.0]
    rotation: 0
    state: enabled
- name: epy_block_2_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n\n    def __init__(self, filter_taps=[0.25,\
      \ 0.25, 0.25, 0.25]):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Custom FIR filter',   # will show up in\
      \ GRC\n            in_sig=[np.float32],\n            out_sig=[np.float32]\n\
      \        )\n        \n        self.filter_taps = filter_taps\n        self.N\
      \ = len(filter_taps)\n        self.set_history(self.N)\n        \n        #Example:\
      \ The comand set_history(N) appends the first N-1 previous items \n        #to\
      \ the input buffer (input_items), while the N'th item is the current value.\
      \ \n        #E.g. if N=4:\n        #input_items[0][3] is the beginning of the\
      \ current input stream.\n        #input_items[0][2] is one input older than\
      \ the current input stream.\n        #input_items[0][1] is one input older than\
      \ input_items[0][2]\n        #input_items[0][0] is one input older than input_items[0][1]\n\
      \n    def work(self, input_items, output_items):\n        \n        #print(\"\
      length of input vector =\" + str(len(input_items[0])))\n        #print(\"length\
      \ of output vector =\"+ str(len(output_items[0])))\n        \n        for i\
      \ in range(0, len(output_items[0])):\n            output_items[0][i] = 0\n \
      \           for j in range(0, self.N):\n                output_items[0][i] =\
      \ output_items[0][i] + input_items[0][i + self.N - 1 - j] * self.filter_taps[j]\n\
      \                 \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    filter_taps: '[1.6030959545942913e-11,-1.1139562047901563e-05,-3.9146700146375224e-05,2.355114156671334e-05,0.0002193458058172837,0.0002723745710682124,-0.00017417181516066194,-0.0008703289204277098,-0.00080159428762272,0.0006686965934932232,0.0023490863386541605,0.0017374408198520541,-0.0019213478080928326,-0.005237944424152374,-0.003134937724098563,0.004642468877136707,0.010357742197811604,0.004925252869725227,-0.010041072964668274,-0.019021600484848022,-0.006888555828481913,0.020558884367346764,0.034259285777807236,0.008687884546816349,-0.04359493404626846,-0.0680462196469307,-0.009957751259207726,0.12980270385742188,0.2793668806552887,0.34373828768730164,0.2793668806552887,0.12980270385742188,-0.009957751259207726,-0.0680462121963501,-0.04359493404626846,0.008687884546816349,0.034259285777807236,0.020558886229991913,-0.006888555828481913,-0.01902160607278347,-0.0100410720333457,0.004925251938402653,0.010357742197811604,0.00464246841147542,-0.003134937956929207,-0.005237945355474949,-0.0019213482737541199,0.0017374414019286633,0.002349087269976735,0.0006686964188702404,-0.0008015942294150591,-0.0008703286293894053,-0.00017417181516066194,0.0002723745710682124,0.00021934599499218166,2.355117794650141e-05,-3.91468420275487e-05,-1.1139349226141348e-05,1.6030959545942913e-11]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Custom FIR filter', 'blk', [('filter_taps', '[0.25, 0.25, 0.25, 0.25]')],
      [('0', 'float', 1)], [('0', 'float', 1)], 'arguments to this function show up
      as parameters in GRC', ['filter_taps'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 172.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: '[0.25, 0.25, 0.25, 0.25]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 260.0]
    rotation: 0
    state: enabled
- name: fir_filter_xxx_0_0
  id: fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_delay: '0'
    taps: '[1.6030959545942913e-11,-1.1139562047901563e-05,-3.9146700146375224e-05,2.355114156671334e-05,0.0002193458058172837,0.0002723745710682124,-0.00017417181516066194,-0.0008703289204277098,-0.00080159428762272,0.0006686965934932232,0.0023490863386541605,0.0017374408198520541,-0.0019213478080928326,-0.005237944424152374,-0.003134937724098563,0.004642468877136707,0.010357742197811604,0.004925252869725227,-0.010041072964668274,-0.019021600484848022,-0.006888555828481913,0.020558884367346764,0.034259285777807236,0.008687884546816349,-0.04359493404626846,-0.0680462196469307,-0.009957751259207726,0.12980270385742188,0.2793668806552887,0.34373828768730164,0.2793668806552887,0.12980270385742188,-0.009957751259207726,-0.0680462121963501,-0.04359493404626846,0.008687884546816349,0.034259285777807236,0.020558886229991913,-0.006888555828481913,-0.01902160607278347,-0.0100410720333457,0.004925251938402653,0.010357742197811604,0.00464246841147542,-0.003134937956929207,-0.005237945355474949,-0.0019213482737541199,0.0017374414019286633,0.002349087269976735,0.0006686964188702404,-0.0008015942294150591,-0.0008703286293894053,-0.00017417181516066194,0.0002723745710682124,0.00021934599499218166,2.355117794650141e-05,-3.91468420275487e-05,-1.1139349226141348e-05,1.6030959545942913e-11]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 84.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '2'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: float
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 268.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '2'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: float
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 92.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '2'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1192, 508.0]
    rotation: 0
    state: true

connections:
- [analog_noise_source_x_0, '0', blocks_add_xx_0, '0']
- [analog_noise_source_x_0, '0', blocks_throttle_0, '0']
- [analog_sig_source_x_0, '0', blocks_add_xx_0, '1']
- [blocks_add_xx_0, '0', blocks_throttle_0_0, '0']
- [blocks_throttle_0, '0', epy_block_2, '0']
- [blocks_throttle_0, '0', epy_block_2_1, '0']
- [blocks_throttle_0, '0', fir_filter_xxx_0, '0']
- [blocks_throttle_0, '0', fir_filter_xxx_0_0, '0']
- [blocks_throttle_0_0, '0', epy_block_2_0, '0']
- [blocks_throttle_0_0, '0', qtgui_time_sink_x_0, '0']
- [epy_block_2, '0', qtgui_freq_sink_x_0, '1']
- [epy_block_2_0, '0', qtgui_time_sink_x_0, '1']
- [epy_block_2_1, '0', qtgui_freq_sink_x_0_0, '1']
- [fir_filter_xxx_0, '0', qtgui_freq_sink_x_0, '0']
- [fir_filter_xxx_0_0, '0', qtgui_freq_sink_x_0_0, '0']

metadata:
  file_format: 1
